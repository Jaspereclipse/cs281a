pairlist[[i]]
nodeCount[[1]]
nodeCount[[c(1,2)]]
pairlist[[i]][1]
denominator <- nodeCount[[first]]
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- nodeCount[[first]]
denominator
first <- pairlist[[i]][1]
first
nodeCount[[first]]
nodeCount[[first]][2]
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- c(nodeCount[[first]][1]*nodeCount[[second]][1],
nodeCount[[first]][2]*nodeCount[[second]][1],
nodeCount[[first]][1]*nodeCount[[second]][2],
nodeCount[[first]][2]*nodeCount[[second]][2])
denon
denominator
weight[i] = pairCount[[i]]*log(pairCount[[i]]/denominator)
weight <- rep(0,nPairs)
weight[i] = pairCount[[i]]*log(pairCount[[i]]/denominator)
log(pairCount[[i]]/denominator)
pairCount[[i]]
denominator
log(pairCount[[i]]/denominator)
weight[i] = sum(pairCount[[i]]*log(pairCount[[i]]/denominator))
weight[i]
for(i in 1 : nPairs){
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- c(nodeCount[[first]][1]*nodeCount[[second]][1],
nodeCount[[first]][2]*nodeCount[[second]][1],
nodeCount[[first]][1]*nodeCount[[second]][2],
nodeCount[[first]][2]*nodeCount[[second]][2])
weight[i] = sum(pairCount[[i]]*log(pairCount[[i]]/denominator))
}
weight
tmp <- unlist(pairlist)
tmp
tmp <- matrix(unlist(pairlist),nrow=2)
tmp
tmp <- t(matrix(unlist(pairlist),nrow=2))
temp
tmp
weight = cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
weight
?sort
?order
weight <- rep(0,nPairs)
for(i in 1 : nPairs){
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- c(nodeCount[[first]][1]*nodeCount[[second]][1],
nodeCount[[first]][2]*nodeCount[[second]][1],
nodeCount[[first]][1]*nodeCount[[second]][2],
nodeCount[[first]][2]*nodeCount[[second]][2])
weight[i] = sum(pairCount[[i]]*log(pairCount[[i]]/denominator))
}
weight_order <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
weight_order = order(weight_order[,3],decreasing = TRUE)
weight_order
setwd("E:/Berkeley/CS281A/ps4")
##Read data as data.frame
data <- read.table("hw4data.data")
dim(data) # 500 * 7
nObs <- dim(data)[1]
nNodes <- dim(data)[2]
nPairs <- choose(nNodes,2)
pairlist <- list(c(1,2),c(1,3),c(1,4),c(1,5),c(1,6),c(1,7),c(2,3),
c(2,4),c(2,5),c(2,6),c(2,7),c(3,4),c(3,5),c(3,6),
c(3,7),c(4,5),c(4,6),c(4,7),c(5,6),c(5,7),c(6,7))  # 21 pairs
##Compute empirical marginals on nodes and pairs
pairCount <- lapply(pairlist,function(vec){
as.data.frame(table(data[vec]))[,3]/nObs
})
nodeCount <- lapply(c(1:nNodes),function(val){
as.data.frame(table(data[,val]))[,2]/nObs
})
##Compute the weight for each edge
weight <- rep(0,nPairs)
for(i in 1 : nPairs){
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- c(nodeCount[[first]][1]*nodeCount[[second]][1],
nodeCount[[first]][2]*nodeCount[[second]][1],
nodeCount[[first]][1]*nodeCount[[second]][2],
nodeCount[[first]][2]*nodeCount[[second]][2])
weight[i] = sum(pairCount[[i]]*log(pairCount[[i]]/denominator))
}
setwd("E:/Berkeley/CS281A/ps4")
##Read data as data.frame
data <- read.table("hw4data.data")
dim(data) # 500 * 7
nObs <- dim(data)[1]
nNodes <- dim(data)[2]
nPairs <- choose(nNodes,2)
pairlist <- list(c(1,2),c(1,3),c(1,4),c(1,5),c(1,6),c(1,7),c(2,3),
c(2,4),c(2,5),c(2,6),c(2,7),c(3,4),c(3,5),c(3,6),
c(3,7),c(4,5),c(4,6),c(4,7),c(5,6),c(5,7),c(6,7))  # 21 pairs
##Compute empirical marginals on nodes and pairs
pairCount <- lapply(pairlist,function(vec){
as.data.frame(table(data[vec]))[,3]/nObs
})
nodeCount <- lapply(c(1:nNodes),function(val){
as.data.frame(table(data[,val]))[,2]/nObs
})
##Compute the weight for each edge
weight <- rep(0,nPairs)
for(i in 1 : nPairs){
first <- pairlist[[i]][1]
second <- pairlist[[i]][2]
denominator <- c(nodeCount[[first]][1]*nodeCount[[second]][1],
nodeCount[[first]][2]*nodeCount[[second]][1],
nodeCount[[first]][1]*nodeCount[[second]][2],
nodeCount[[first]][2]*nodeCount[[second]][2])
weight[i] = sum(pairCount[[i]]*log(pairCount[[i]]/denominator))
}
weight
weight_order <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
weight_order
weight_order = order(weight_order[,3],decreasing = TRUE)
weight_order
?sort
df <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
source('E:/Berkeley/CS281A/ps4/hw4-mwst.R', echo=TRUE)
m <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
ind <- rep(0,nPair)
ind <- rep(0,nPairs)
c(1,2,3,4)
a <- c(1,2,3,4)
a != 1
for(i in 1:length(order)){
if (m[order[i],1] != m[ind,1] & m[order[i],2] != m[ind,2]){ #No cycle
ind[i] = order[i]
}
}
m <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
order = order(df[,3],decreasing = TRUE)
ind <- rep(0,nPairs)
for(i in 1:length(order)){
if (m[order[i],1] != m[ind,1] & m[order[i],2] != m[ind,2]){ #No cycle
ind[i] = order[i]
}
}
m <- cbind(t(matrix(unlist(pairlist),nrow=2)),weight)
m
order <- order(df[,3],decreasing = TRUE)
order
i=1
m[order[i],1]
for(i in 1:length(order)){
if(i==1){
ind[i] = order[i]
}
else if (m[order[i],1] != m[ind,1] & m[order[i],2] != m[ind,2]){ #No cycle
ind[i] = order[i]
}
}
ind
weight
m
ind
sort(m)
sort(m,3)
sort(m[,3])
sort(m,[],3)
sort(m,[,3)
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
df
df$weight
df <- sort(df$weight)
df
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
df <- df[order(df$weight,decreasing=TRUE)]
df <- df[order(df$weight]
df <- df[order(df$weight)]
df <- df[,order(df$weight,decreasing=TRUE)]
df <- df[order(df$weight,decreasing=TRUE),]
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
df <- df[order(df$weight,decreasing=TRUE),]
df
ind[1] = df[1,-1]
ind[1] = rowname(df[1,])
ind[1] = rownames(df[1,])
ind
ind <- rep(0,nPairs)
ind[1] = rownames(df[1,])
ind
ind[1] = as.numeric(rownames(df[1,]))
ind
ind[1] = as.numeric(rownames(df[1,1]))
ind <- rep(0,nPairs)
ind[1] = as.numeric(rownames(df[1,1]))
df
order <- order(df$weight,decreasing=TRUE)
df <- df[order,]
ind <- rep(0,nPairs)
ind[1] = order[1]
ind
order
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
df <- df[order,]
order
ind[1] = order[1]
ind
for(i in 2:nPairs){
if (df[order[i],1] != df[ind,1] & df[order[i],2] != df[ind,2]){ #No cycle
ind[i] = order[i]
}
}
ind
i
i=2
df[order[i],1] != df[ind,1]
df[order[i],2] != df[ind,2]
df[order[i],2]
for(i in 2:nPairs){
if (df[order[i],1] != df[ind,1] || df[order[i],2] != df[ind,2]){ #No cycle
ind[i] = order[i]
}
}
ind
df[order[i],1]
df[ind,1]
df[order[i],1] != df[ind,1]''
df[order[i],1] != df[ind,1]
ind[1] = order[1]
for(i in 2:nPairs){
if (df[order[i],1] == df[ind,1] & df[order[i],2] == df[ind,2]) #No cycle
else{
ind[i] = order[i]
}
}
ind[1] = order[1]
for(i in 2:nPairs){
if (df[order[i],1] == df[ind,1] & df[order[i],2] == df[ind,2]){} #No cycle
else{
ind[i] = order[i]
}
}
ind <- rep(0,nPairs)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:nPairs){
if (df[order[i],1] == df[ind,1] & df[order[i],2] == df[ind,2]){} #No cycle
else{
ind[i] = order[i]
}
}
ind
df[order[i],1] == df[ind,1]
ind <- rep(0,nPairs)
ind[1] = order[1]
df[order[2],1] == df[ind,1]
(df[order[i],1] == df[ind,1])
i=2
if (df[order[i],1] == df[ind,1] & df[order[i],2] == df[ind,2]){} #No cycle
else{
ind[i] = order[i]
}
if (df[order[i],1] == df[ind,1] & df[order[i],2] == df[ind,2]){} #No cycle
else {
ind[i] = order[i]
}
df[order[i],1] != df[ind,1]
&(df[order[i],1] != df[ind,1])
(df[order[i],1] != df[ind,1])
(df[order[i],1] != df[ind,1])&
any(df[order[i],1] != df[ind,1])
?any
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
df <- df[order,]
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:nPairs){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
df[20,]
df
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:nPairs){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
id
ind
df
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:nPairs){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
df
ind
order
(any(df[order[4],1] == df[ind,1]) & any(df[order[4],2] == df[ind,2]))
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
(any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2]))
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
print(i)
ind[i] = order[i]
}
}
(any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2]))
i
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
print(i)
ind[i] = order[i]
}
}
(any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2]))
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
if (I){
print("Adding edge would form a cycle!")
} #No cycle
else if(!I){
print(i)
ind[i] = order[i]
}
}
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
print(i)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else if(!I){
print(i)
ind[i] = order[i]
}
}
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:3){
print(i)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else if(!I){
print(i)
ind[i] = order[i]
}
}
ind
for(i in 2:3){
print(i)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
i
any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
any(df[order[4],1] == df[ind,1]) & any(df[order[4],2] == df[ind,2])
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
print(i)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:4){
print(i)
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind[1] = order[1]
for(i in 2:3){
print(i)
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:3){
print(i)
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
if (any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
i=4
print(i)
I <- any(df[order[i],1] == df[ind,1]) & any(df[order[i],2] == df[ind,2])
print(I)
df[order[i],1]
df
df[order[i],2]
df[ind,1]
any(df[order[i],1] == df[ind,1])
df[ind,2]
df[order[i],2]
c(df[ind,1],df[ind,2])
c(df[order[i],1],df[order[i],1])
c(df[order[i],1],df[order[i],2])
c(df[order[i],1],df[order[i],2]) == c(df[ind,1],df[ind,2])
c(df[order[i],1],df[order[i],2])
c(df[ind,1],df[ind,2])
df <- data.frame(cbind(t(matrix(unlist(pairlist),nrow=2)),weight))
order <- order(df$weight,decreasing=TRUE)
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:3){
print(i)
I <- any(df[order[i],1] == c(df[ind,1],df[ind,2])) & any(df[order[i],2] == c(df[ind,1],df[ind,2]))
print(I)
if (I){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind <- rep(0,nPairs)
ind[1] = order[1]
for(i in 2:nPairs){
I <- any(df[order[i],1] == c(df[ind,1],df[ind,2])) & any(df[order[i],2] == c(df[ind,1],df[ind,2]))
if (I){
print("Adding edge would form a cycle!")
} #No cycle
else{
ind[i] = order[i]
}
}
ind
